#!/usr/bin/env python

__author__  = 'Julien Bigot <julien.bigot@cea.fr>'
__version__ = '0.2'
__date__    = '2013/08/01'
__license__ = 'BSD'

""" The Bash PreProcessor
"""

from optparse import OptionParser
from os import unlink, listdir, symlink
from os.path import join, basename, abspath, exists
from shutil import rmtree, copyfile
from subprocess import call
from sys import argv, exit
from tempfile import NamedTemporaryFile, mkdtemp
from uuid import uuid4

EOCAT='EOCAT_'+str(uuid4()).replace('-','_')

parser = OptionParser(description="", version=__version__, usage='%prog [options...] <source> <destination>')
parser.add_option('-I', action='append', dest='includes', metavar="DIR", nargs=1, default=list(),
                  help='add DIR to search list for source directives')
(opts, args) = parser.parse_args()
if len(args) != 2:
    parser.error("Invalid number of arguments")

tmpdir = mkdtemp(suffix='', prefix='bpp.tmp.')
result=1
try:
    for incdir in opts.includes:
        for incfile in listdir(incdir):
            src = abspath(join(incdir, incfile))
            dst = join(tmpdir, basename(incfile))
            if exists(dst):
                unlink(dst)
            symlink(src, dst)

    tmp = NamedTemporaryFile(prefix='bpp.', suffix='.tmp.bash', dir=tmpdir, delete=False)

    tmp.write("#!/bin/bash\n")
    inbash=True
    for line in file(args[0]):
        if line[0:4] == "!$SH":
            if not inbash:
                tmp.write(EOCAT+"\n")
                inbash=True
                tmp.write(line[4:])
        else:
            if inbash:
                tmp.write("cat<<"+EOCAT+"\n")
                inbash=False
                tmp.write(line)
        if not inbash:
            tmp.write(EOCAT+"\n")
    tmp.close()

    outfile=open(args[1], 'w')
    result = call(['bash','-r',tmp.name], stdout=outfile, cwd=tmpdir)
except:
    result=-1
rmtree(tmpdir)
exit(result)
